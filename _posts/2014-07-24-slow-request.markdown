---
layout: post
title:  "同时发出100个请求，等待所有的请求都返回才算成功。99%的请求10ms返回，1%的请求1s返回"
date:   2014 Jul 24
categories: math engineering
tags: slow probabilistic
---

# 同时发出100个请求，等待所有的请求都返回才算成功。99%的请求10ms返回，1%的请求1s返回。
能快速返回的耗时和概率有多少？怎么破?

------------

假设慢请求的概率是p，请求总数是n：

$$ p = 0.01, n = 100 $$

# 所有请求能在10ms内返回的概率只有 36%：
$$ (1-p)^n \approx 0.36% $$

# 那这项目还做吗？

但如果假设可以重设两次，情况会好得多。orz

------------

如果第一次失败,那么我对失败的重新发起请求,这样总共耗时20毫秒,但是2次都失败的概率会变得很低.

100个请求1次全部成功的概率是:
$$ \binom{100}0 p^0 (1-p)^{100} $$

有一个请求超时的概率是:
$$ \binom{100}1 p^1 (1-p)^{99} $$

到10ms直接中断等待，然后对于剩下的一个请求,重新发起请求，请求成功的概率是:
$$ (1-p) $$

因此当由1个请求超时的时候，2次重试成功的概率是：
$$ \binom{99}1 p^1 (1-p)^{99} \times (1-p) $$

同样，有两个请求超时的情况下，2次重试成功的概率是：
$$ \binom{98}2 p^2 (1-p)^{98} \times (1-p)^2 $$

同样，有i个请求超时的概率是:
$$ \binom{n}{i} p^i (1-p)^{n} $$

因此,所有的情况的概率加起来是:
$$ p_{all\_return\_in\_20ms} = \sum_{i=0}^n \binom{n}{i} p^i (1-p)^{n} $$

$$ p_{all\_return\_in\_20ms} = (1-p)^{n} \sum_{i=0}^n \binom{n}{i} p^i $$

$$ p_{all\_return\_in\_20ms} = (1-p)^n (1+p)^n $$

$$ p_{all\_return\_in\_20ms} = (1-p^2)^n $$

$$ p_{all\_return\_in\_20ms} \approx 99.004 \% $$

因此，重试一次，耗时10ms成功的概率是36.6%；
而重试两次，耗时20ms成功的概率是: 99.004%

------------

# 另一种解释

如果可以重试两次,那么对每个请求，两次都超时的概率是：
$$ p^2 $$

因此重试两次成功的概率是：
$$ 1 - p^2 $$

所有请求全部成功的概率是：
$$ p_{all\_return\_in\_20ms} = (1-p^2)^n $$
